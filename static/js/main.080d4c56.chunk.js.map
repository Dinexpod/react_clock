{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","updateTimeScheduler","this","setInterval","setState","console","log","toLocaleTimeString","prevProps","name","props","undefined","clearInterval","React","Component","App","isClockVisible","clockName","showClock","hideClock","renameClock","Math","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,yBALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,oBAAsBE,aACzB,WACE,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAG1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAE9B,OAfN,gCAmBE,SAAmBC,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAEhCJ,QAAQC,IAAR,qCAA0CE,EAAUC,KAApD,eAA+DP,KAAKQ,MAAMD,SAtBhF,kCA0BE,gBACmCE,IAA7BT,KAAKD,qBACPW,cAAcV,KAAKD,uBA5BzB,oBAgCE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KACAU,EAASP,KAAKQ,MAAdD,KAER,OACE,qCACGV,EAAKQ,sBACM,IAAVE,GAAD,YAAsBA,EAAtB,YAvCT,GAA2BI,IAAMC,WCCZC,E,4MACnBjB,MAAQ,CACNkB,gBAAgB,EAChBC,WAAY,G,EAGdC,UAAY,WACV,EAAKd,SAAS,CAAEY,gBAAgB,K,EAGlCG,UAAY,WACV,EAAKf,SAAS,CAAEY,gBAAgB,K,EAGlCI,YAAc,WACZ,EAAKhB,SAAS,CAAEa,UAAWI,KAAKC,Y,4CAGlC,WACE,MAAsCpB,KAAKJ,MAAnCkB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,sBAAKM,UAAU,MAAf,UACE,6CACA,8CAEG,IACAP,GAAkB,cAAC,EAAD,CAAOP,KAAMQ,OAGlC,wBACEO,KAAK,SACLC,QAASvB,KAAKgB,UAFhB,wBAOA,wBACEM,KAAK,SACLC,QAASvB,KAAKiB,UAFhB,wBAOA,wBACEK,KAAK,SACLC,QAASvB,KAAKkB,YAFhB,oC,GA5CyBP,IAAMC,WCRvCY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.080d4c56.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: number\n};\n\ntype State = {\n  time: Date\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date(),\n  };\n\n  updateTimeScheduler: NodeJS.Timeout | undefined;\n\n  componentDidMount() {\n    this.updateTimeScheduler = setInterval(\n      () => {\n        this.setState({ time: new Date() });\n\n        // eslint-disable-next-line no-console\n        console.log(this.state.time.toLocaleTimeString());\n      },\n      1000,\n    );\n  }\n\n  componentDidUpdate(prevProps: { name: number; }) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.updateTimeScheduler !== undefined) {\n      clearInterval(this.updateTimeScheduler);\n    }\n  }\n\n  render() {\n    const { time } = this.state;\n    const { name } = this.props;\n\n    return (\n      <>\n        {time.toLocaleTimeString()}\n        {(name !== -1) && ` (${name})`}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype Props = {};\n\ntype State = {\n  isClockVisible: boolean\n  clockName: number\n};\n\nexport default class App extends React.Component<Props, State> {\n  state = {\n    isClockVisible: false,\n    clockName: -1,\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  renameClock = () => {\n    this.setState({ clockName: Math.random() });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {isClockVisible && <Clock name={clockName} />}\n        </p>\n\n        <button\n          type=\"button\"\n          onClick={this.showClock}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.hideClock}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.renameClock}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}